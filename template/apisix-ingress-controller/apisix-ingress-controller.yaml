# Source: apisix-ingress-controller/templates/configmap.yaml

apiVersion: v1
kind: ConfigMap
metadata:
  name: apisix-ingress-controller-configmap
  namespace: _ZONE_
data:
  config.yaml: |
    # log options
    log_level: "info"
    log_output: "stderr"
    cert_file: "/etc/webhook/certs/cert.pem"
    key_file: "/etc/webhook/certs/key.pem"
    http_listen: ":8080"
    https_listen: ":8443"
    ingress_publish_service:
    enable_profiling: true
    kubernetes:
      kubeconfig: ""
      resync_interval: "6h"
      app_namespaces:
      - ""
      namespace_selector:
      - "apisix.ingress=watching"
      election_id: "ingress-apisix-leader"
      ingress_class: "_ZONE_"
      ingress_version: "networking/v1"
      watch_endpointslices: false
      apisix_route_version: "apisix.apache.org/v2beta3"
      enable_gateway_api: false
    apisix:
      default_cluster_base_url: http://apisix-admin._ZONE_.svc.cluster.local:9180/apisix/admin
      default_cluster_admin_key: "edd1c9f034335f136f87ad84b625c8f1"
      default_cluster_name: "default"

---
# Source: apisix-ingress-controller/templates/service.yaml

apiVersion: v1
kind: Service
metadata:
  name: apisix-ingress-controller
  namespace: _ZONE_
  labels:
    app.kubernetes.io/name: apisix-ingress-controller
    app.kubernetes.io/instance: apisix-ingress-controller
spec:
  type: ClusterIP
  ports:
    - port: 80
      targetPort: 8080
      protocol: TCP
      name: http
  selector:
    app.kubernetes.io/name: apisix-ingress-controller
    app.kubernetes.io/instance: apisix-ingress-controller

---
# Source: apisix-ingress-controller/templates/deployment.yaml

apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app.kubernetes.io/instance: apisix-ingress-controller
    app.kubernetes.io/name: apisix-ingress-controller
  name: apisix-ingress-controller
  namespace: _ZONE_
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/instance: apisix-ingress-controller
      app.kubernetes.io/name: apisix-ingress-controller
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate
  template:
    metadata:
      annotations:
        checksum/config: 86ac8ff10e36f63868e04c84289207a8525cdd54cb6f6c94808889a20cb7843e
      creationTimestamp: null
      labels:
        app.kubernetes.io/instance: apisix-ingress-controller
        app.kubernetes.io/name: apisix-ingress-controller
    spec:
      containers:
        - command:
            - /ingress-apisix/apisix-ingress-controller
            - ingress
            - --config-path
            - /ingress-apisix/conf/config.yaml
          env:
            - name: POD_NAMESPACE
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: metadata.namespace
            - name: POD_NAME
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: metadata.name
          image: apache/apisix-ingress-controller:1.5.1
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /healthz
              port: 8080
              scheme: HTTP
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          name: apisix-ingress-controller
          ports:
            - containerPort: 8080
              name: http
              protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /healthz
              port: 8080
              scheme: HTTP
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          resources: {}
          volumeMounts:
            - mountPath: /ingress-apisix/conf
              name: configuration
      dnsPolicy: ClusterFirst
      initContainers:
        - command:
            - sh
            - -c
            - until nc -z apisix-admin._ZONE_.svc.cluster.local 9180 ; do echo waiting
              for apisix-admin; sleep 2; done;
          image: busybox:1.28
          imagePullPolicy: IfNotPresent
          name: wait-apisix-admin
          resources: {}
      nodeSelector:
        apisix.io/apisix-worker-zone: _ZONE_
      restartPolicy: Always
      serviceAccount: apisix-ingress-controller
      serviceAccountName: apisix-ingress-controller
      volumes:
        - configMap:
            defaultMode: 420
            items:
              - key: config.yaml
                path: config.yaml
            name: apisix-ingress-controller-configmap
          name: configuration
